name: Frontend - Build, Test and Deploy

on:
  push:
    branches: ["master"]
    paths:
      - "frontend/**"
      - "!**.md"
  pull_request:
    branches: ["master"]
    paths:
      - ".github/workflows/deploy-frontend.yml"

env:
  WORK_DIR: frontend
  ECR_REPOSITORY: frontend
  EKS_NAMESPACE_OPEN: taskingai-open
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_TEST }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORK_DIR }}
    environment: test
    steps:
      ##################################################################
      #                        1. check version                        #
      ##################################################################

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Verify working directory
        run: pwd

      - name: Read Version
        id: version
        run: |
          IMAGE_TAG=$(jq -r '.version' package.json)
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION_TEST }}
          mask-aws-account-id: "true"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_TEST }}
          AWS_REGION: ${{ secrets.AWS_REGION_TEST }}

      - name: Get ECR registry
        run: |
          ECR_REGISTRY=$(aws ecr describe-repositories --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text | cut -d'/' -f1)
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_TEST }}
          AWS_REGION: ${{ secrets.AWS_REGION_TEST }}

      - name: Build Docker image
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Build success: ${ECR_REGISTRY}/$ECR_REPOSITORY:${IMAGE_TAG}"
      
      - name: Push Docker image to Amazon ECR
        if: success()
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update deployment image (open source)
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME_TEST }}
          args: -n ${{ env.EKS_NAMESPACE_OPEN }} set image deployment/${{ env.ECR_REPOSITORY }} ${{ env.ECR_REPOSITORY }}=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
  
      - name: Verify deployment (open source)
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME_TEST }}
          args: -n ${{ env.EKS_NAMESPACE_OPEN }} rollout status deployment/${{ env.ECR_REPOSITORY }} --timeout=60s