name: Build, Test and Deploy

on:
  push:
    branches: [ "master" ]
    paths:
      - 'plugin/**'
      - '!**.md'
      - '!**.svg'
      - '!**.jpg'
      - '!**.png'

env:
  ECR_REPOSITORY: plugin
  EKS_NAMESPACE: ${{ secrets.EKS_NAMESPACE_TEST }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_TEST }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check spelling of repo
        uses: crate-ci/typos@master

      - name: Set short SHA
        run: echo "IMAGE_TAG=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_ENV

      - name: Check for git tag version
        id: get_tag
        run: |
          TAG=$(git describe --tags --exact-match 2> /dev/null || echo "")
          if [[ -n "$TAG" ]]; then
            echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        working-directory: plugin
        run: pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION_TEST }}
          mask-aws-account-id: "true"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_TEST }}
          AWS_REGION: ${{ secrets.AWS_REGION_TEST }}

      - name: Get ECR registry
        run: |
          ECR_REGISTRY=$(aws ecr describe-repositories --region $AWS_REGION --query 'repositories[0].repositoryUri' --output text | cut -d'/' -f1)
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_TEST }}
          AWS_REGION: ${{ secrets.AWS_REGION_TEST }}

      - name: Build Docker image
        working-directory: plugin
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Build success: ${ECR_REGISTRY}/$ECR_REPOSITORY:${IMAGE_TAG}"

      - name: Run Docker image
        working-directory: plugin
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          PLUGIN_BUNDLE_CREDENTIALS: ${{ secrets.PLUGIN_BUNDLE_CREDENTIALS }}
        run: |
          echo "$PLUGIN_BUNDLE_CREDENTIALS" > .env
          docker run -d --name test_container --network=host --env-file .env -e PATH_TO_VOLUME=./test/ $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          sleep 5 # Wait for service to start

      - name: Run Tests
        working-directory: plugin
        run: |
          bash ./test/run_full_test.sh

      - name: Push Docker image to Amazon ECR
        if: success()
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Image pushed: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update deployment image
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME_TEST }}
          args: -n ${{ env.EKS_NAMESPACE }} set image deployment/${{ env.ECR_REPOSITORY }} ${{ env.ECR_REPOSITORY }}=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Verify deployment
        uses: ianbelcher/eks-kubectl-action@master
        with:
          cluster_name: ${{ secrets.CLUSTER_NAME_TEST }}
          args: -n ${{ env.EKS_NAMESPACE }} rollout status deployment/${{ env.ECR_REPOSITORY }} --timeout=60s
