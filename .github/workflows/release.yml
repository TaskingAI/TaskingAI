name: Publish Package

on:
  push:
    tags: ["v*.*.*"]
    paths-ignore:
      - '**.md'

env:
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  # EKS_NAMESPACE: ${{ vars.EKS_NAMESPACE_TEST }}
  # AWS_DEFAULT_REGION: ${{ vars.AWS_REGION_TEST }}
  # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set short SHA
      run: echo "IMAGE_TAG=$(echo ${{ github.sha }} | cut -c 1-7)" >> $GITHUB_ENV

    - name: Check for git tag version
      id: get_tag
      run: |
        TAG=$(git describe --tags --exact-match 2> /dev/null || echo "")
        if [[ -n "$TAG" ]]; then
          echo "IMAGE_TAG=${TAG}" >> $GITHUB_ENV
        fi
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Run Version Verification
      run: |
        cd backend
        python -c "from config import CONFIG; import os; current_tag = os.getenv('IMAGE_TAG'); assert CONFIG.VERSION == current_tag, 'Version mismatch: Expected {} but got {}'.format(CONFIG.VERSION, current_tag); print('Version matched!')"


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: linux/amd64,linux/arm64
        tags: taskingai/taskingai:latest,taskingai/taskingai:${{ env.IMAGE_TAG }}
    
    - name: Image digest
      run: |
        echo "Latest image digest: ${{ steps.docker_build.outputs.digest }}"
        echo "Tagged image digest: ${{ steps.docker_build.outputs.digest }}-${{ env.IMAGE_TAG }}"